interface MessageSender {
    void sendMessage(String message);
}


class EmailSender implements MessageSender {
    @Override
    public void sendMessage(String message) {
        System.out.println("Sending email: " + message);
    }
}

class SMSSender implements MessageSender {
    @Override
    public void sendMessage(String message) {
        System.out.println("Sending SMS: " + message);
    }
}


class Notifier {
    private MessageSender sender;

    public Notifier(MessageSender sender) {
        this.sender = sender;
    }

    public void send(String message) {
        sender.sendMessage(message);
    }
}

public class DependencyInversionPrinciple {
    public static void main(String[] args) {
        
        Notifier emailNotifier = new Notifier(new EmailSender());
        emailNotifier.send("Hello via Email!");

        Notifier smsNotifier = new Notifier(new SMSSender());
        smsNotifier.send("Hello via SMS!");
    }
}
